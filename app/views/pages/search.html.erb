<h1>search</h1>
<section>
  <div class="row">
    <div class="col-md-6">
      <div class="form-group">
        <%= text_field :search, params[:search], placeholder: "Where are you going? ", class: "form-control", id: "pac-input" %>
      </div>
    </div>
    <div class="col-md-6">
      <div id="map" style="height: 500px;"></div>
    </div>
  </div>
</section>
@listings
@latitude
@longitude
<script>
  function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: { lat: <%= @latitude %>, lng: <%= @longitude %> },
      zoom: 13
    });

    var input = document.getElementById('pac-input');
    var autocomplete = new google.maps.places.Autocomplete(input);
    var makers = [];
    var infowindow = [];

    <% @listings.each do |listing| %>
      var marker = new google.maps.Marker({
        position: new google.maps.LatLng(<%= listing.latitude %>, <%= listing.longitude %>)
        map: map
      });

      makers.push(marker);
      marker.addListener('click', function() {
      <% if !listing.photos.blank? %>
        var content = "<div>" + '<a href="/listings/' + <%= listing.id %> +'">' + "<img src="+"<%= listing.photos[0].image.url(:thumb) %>" + " " + "style='width: 100%;height: 150px;'" +"alt='139'>" + "</a>" + '<br>' + "<h5><%= listing.listing_title %></h5>" + "<div class="+"col-md-12"+">"+"<h4>Reviews <span class="+"average_rating_listing"+"></span>"+"(<%= listing.reviews.count %>)"+"</h4></div>";
      <% end %>

      var infowindow = new google.maps.InfoWindow({
        content: content,
        maxWidth: 280
      });

      infowindow.open(map, this);
      infowindows.push(infowindow);

      google.maps.event.addListener(infowindow, 'domready', function() {
    /*    $('.average_rating_listing').raty({
          path: '/assets',
          readOnly: true,
          score: <%= listing.average_star_rate %>
        });*/
      });
    });
    <% end %>
/**
    var infowindow = new google.maps.InfoWindow();
    var infowindowContent = document.getElementById('infowindow-content');
    infowindow.setContent(infowindowContent);
    var marker = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29)
    });

    autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        // User entered the name of a Place that was not suggested and
        // pressed the Enter key, or the Place Details request failed.
        window.alert("No details available for input: '" + place.name + "'");
        return;
      }

      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);  // Why 17? Because it looks good.
      }
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);

      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
      }

      infowindowContent.children['place-icon'].src = place.icon;
      infowindowContent.children['place-name'].textContent = place.name;
      infowindowContent.children['place-address'].textContent = address;
      infowindow.open(map, marker);
    });

    // Sets a listener on a radio button to change the filter type on Places
    // Autocomplete.
    function setupClickListener(id, types) {
      var radioButton = document.getElementById(id);
      radioButton.addEventListener('click', function() {
        autocomplete.setTypes(types);
      });
    }

    setupClickListener('changetype-all', []);
    setupClickListener('changetype-address', ['address']);
    setupClickListener('changetype-establishment', ['establishment']);
    setupClickListener('changetype-geocode', ['geocode']);

    document.getElementById('use-strict-bounds')
        .addEventListener('click', function() {
          console.log('Checkbox clicked! New state=' + this.checked);
          autocomplete.setOptions({strictBounds: this.checked});
        });
  }
  */
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAX3asr2iXPgbGYkO58mYdSNX58rPIzd1U&libraries=places&callback=initMap"
    async defer></script>
